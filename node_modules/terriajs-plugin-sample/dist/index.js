import t from"terriajs-cesium/Source/Core/createGuid";import{Icon as e,primitiveTrait as i,mixTraits as o,MappableTraits as n,CatalogMemberTraits as r,objectTrait as s,LatLonHeightTraits as a,HeadingPitchRollTraits as m,ModelTraits as l,updateModelFromJson as d,CatalogMemberMixin as h,MappableMixin as p,CreateModel as u,BoxDrawing as c,runWorkflow as g,CommonStrata as w,CatalogMemberFactory as v,MapToolbar as x,UserDrawing as f}from"terriajs-plugin-api";import{__decorate as y}from"tslib";import{computed as b,action as C}from"mobx";import S from"terriajs-cesium/Source/Core/Cartesian3";import D from"terriajs-cesium/Source/Core/Cartographic";import R from"terriajs-cesium/Source/Core/HeadingPitchRoll";import T from"terriajs-cesium/Source/Core/Matrix3";import F from"terriajs-cesium/Source/Core/Matrix4";import j from"terriajs-cesium/Source/Core/Quaternion";import M from"terriajs-cesium/Source/Core/Rectangle";import H from"terriajs-cesium/Source/Core/Transforms";import L from"terriajs-cesium/Source/Core/TranslationRotationScale";var P=require("terriajs-plugin-sample/assets/icons/cube.svg");class V{constructor(t){this.item=t,this.name="Edit box transform",this.icon=e.GLYPHS.cube}get selectableDimensions(){return[this.positionControls,this.dimensionsControls]}get positionControls(){const t=this.item.position;return{type:"group",id:"position",name:"Position",selectableDimensions:[{type:"numeric",id:"latitude",name:"Latitude",value:t.latitude,min:-90,max:90,setDimensionValue:(t,e)=>{void 0!==e&&this.item.position.setTrait(t,"latitude",e)}},{type:"numeric",id:"longitude",name:"Longitude",value:t.longitude,min:-180,max:180,setDimensionValue:(t,e)=>{void 0!==e&&this.item.position.setTrait(t,"longitude",e)}},{type:"numeric",id:"height",name:"Height",value:t.height,setDimensionValue:(t,e)=>{void 0!==e&&this.item.position.setTrait(t,"height",e)}}]}}get dimensionsControls(){const t=this.item.dimensions;return{type:"group",id:"dimensions",name:"Dimensions (in meters)",selectableDimensions:[{type:"numeric",id:"width",name:"Width",min:1,value:t.width,setDimensionValue:(t,e)=>{void 0!==e&&this.item.dimensions.setTrait(t,"width",e)}},{type:"numeric",id:"length",name:"Length",min:1,value:t.length,setDimensionValue:(t,e)=>{void 0!==e&&this.item.dimensions.setTrait(t,"length",e)}},{type:"numeric",id:"height",name:"Height",min:1,value:t.height,setDimensionValue:(t,e)=>{void 0!==e&&this.item.dimensions.setTrait(t,"height",e)}}]}}}y([b],V.prototype,"selectableDimensions",null),y([b],V.prototype,"positionControls",null),y([b],V.prototype,"dimensionsControls",null);class B extends l{static setFromCartesianScale(t,e,i){d(t,e,{width:i.x,length:i.y,height:i.z})}}y([i({type:"number",name:"Length",description:"Length in meters"})],B.prototype,"length",void 0),y([i({type:"number",name:"Width",description:"Width in meters"})],B.prototype,"width",void 0),y([i({type:"number",name:"Height",description:"Height in metres"})],B.prototype,"height",void 0);class k extends(o(n,r)){}y([s({type:a,name:"Origin",description:"The position of the box expressed as a longitude and latitude in degrees and a height above terrain in meters."})],k.prototype,"position",void 0),y([s({type:m,name:"Rotation",description:"The rotation of the model expressed as heading, pitch and roll in the local frame of reference."})],k.prototype,"rotation",void 0),y([s({type:B,name:"Dimensions",description:"The dimensions of the box expressed as lengt, width and height in meters."})],k.prototype,"dimensions",void 0);class G extends(h(p(u(k)))){constructor(t,e){super(t,e),this.type=G.type}forceLoadMapItems(){return Promise.resolve()}get mapItems(){const t=this.terria.cesium;return t?this.boxDrawing||(this.boxDrawing=c.fromTranslationRotationScale(t,this.translationRotationScale,{keepBoxAboveGround:!0,onChange:({translationRotationScale:t})=>{this.setTraitsFromTranslationRotationScale(t)}})):this.boxDrawing=void 0,this.boxDrawing?(this.boxDrawing.setTranslationRotationScale(this.translationRotationScale),this.boxDrawing.dataSource.show=this.show,[this.boxDrawing.dataSource]):[]}get viewingControls(){return[{id:"edit-box-transform",name:"Edit box",icon:{glyph:e.GLYPHS.cube},onClick:t=>{g(t,new V(this))}}]}positionBoxFromRectangle(t){const e=D.toCartesian(M.center(t)),i=S.fromRadians(t.west,t.north),o=S.fromRadians(t.west,t.south),n=S.fromRadians(t.east,t.north),r=S.distance(i,o),s=S.distance(i,n),a=Math.min(r,s),m=j.fromRotationMatrix(F.getMatrix3(H.eastNorthUpToFixedFrame(e),new T)),l=new S(s,r,a),d=new L(e,m,l);this.setTraitsFromTranslationRotationScale(d)}setTraitsFromTranslationRotationScale(t){a.setFromCartesian(this.position,w.user,t.translation),m.setFromQuaternion(this.rotation,w.user,t.rotation),B.setFromCartesianScale(this.dimensions,w.user,t.scale)}get translationRotationScale(){var t,e,i,o,n,r,s,a,m;const l=D.toCartesian(D.fromDegrees(null!==(t=this.position.longitude)&&void 0!==t?t:0,null!==(e=this.position.latitude)&&void 0!==e?e:0,null!==(i=this.position.height)&&void 0!==i?i:0)),d=j.fromHeadingPitchRoll(R.fromDegrees(null!==(o=this.rotation.heading)&&void 0!==o?o:0,null!==(n=this.rotation.pitch)&&void 0!==n?n:0,null!==(r=this.rotation.roll)&&void 0!==r?r:0)),h=new S(null!==(s=this.dimensions.width)&&void 0!==s?s:1,null!==(a=this.dimensions.length)&&void 0!==a?a:1,null!==(m=this.dimensions.height)&&void 0!==m?m:1);return new L(l,d,h)}}G.type="box-drawing",y([b],G.prototype,"mapItems",null),y([b],G.prototype,"viewingControls",null),y([C],G.prototype,"positionBoxFromRectangle",null),y([C],G.prototype,"setTraitsFromTranslationRotationScale",null),y([b],G.prototype,"translationRotationScale",null),v.register(G.type,G);const E={name:"Sample plugin",description:"A sample terria plugin that adds a tool for drawing a 3d box.",version:"0.0.1",register({viewState:e,terria:i,workbench:o}){let n;const r=x.addModeButton(e,{icon:P,text:"Draw a 3D box",onUserEnterMode:()=>{n=function(t,e){return new f({terria:t,messageHeader:"Click two points to draw a 3D box",drawRectangle:!0,onDrawingComplete:({rectangle:t})=>{t&&e(t)}})}(i,(e=>{!function(e,i,o){const n=new G(t(),e);n.setTrait(w.user,"name","3D box"),n.positionBoxFromRectangle(o),e.addModel(n),i.add(n)}(i,o,e),r.closeMode()})),n.enterDrawMode()},onUserCloseMode:()=>{null==n||n.endDrawing()}})}};export{E as default};
