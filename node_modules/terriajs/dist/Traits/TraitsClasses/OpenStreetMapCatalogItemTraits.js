var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import primitiveArrayTrait from "../Decorators/primitiveArrayTrait";
import primitiveTrait from "../Decorators/primitiveTrait";
import mixTraits from "../mixTraits";
import CatalogMemberTraits from "./CatalogMemberTraits";
import LayerOrderingTraits from "./LayerOrderingTraits";
import LegendOwnerTraits from "./LegendOwnerTraits";
import MappableTraits from "./MappableTraits";
import ImageryProviderTraits from "./ImageryProviderTraits";
import UrlTraits from "./UrlTraits";
import { traitClass } from "../Trait";
let OpenStreetMapCatalogItemTraits = class OpenStreetMapCatalogItemTraits extends mixTraits(ImageryProviderTraits, LayerOrderingTraits, UrlTraits, MappableTraits, CatalogMemberTraits, LegendOwnerTraits) {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "fileExtension", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: "png"
        });
        Object.defineProperty(this, "subdomains", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: []
        });
    }
};
__decorate([
    primitiveTrait({
        name: "File extension",
        description: "The file extension used to retrieve Open Street Map data",
        type: "string"
    })
], OpenStreetMapCatalogItemTraits.prototype, "fileExtension", void 0);
__decorate([
    primitiveArrayTrait({
        name: "Subdomains",
        description: "Array of subdomains, one of which will be prepended to each tile URL. This is useful for overcoming browser limit on the number of simultaneous requests per host.",
        type: "string"
    })
], OpenStreetMapCatalogItemTraits.prototype, "subdomains", void 0);
OpenStreetMapCatalogItemTraits = __decorate([
    traitClass({
        description: `Creates one base map item from url that points to an OpenStreetMap service.`,
        example: {
            item: {
                type: "open-street-map",
                name: "Voyager",
                url: "https://global.ssl.fastly.net/rastertiles/voyager/",
                attribution: "© OpenStreetMap contributors ODbL, © CartoDB CC-BY 3.0",
                opacity: 1,
                subdomains: [
                    "cartodb-basemaps-a",
                    "cartodb-basemaps-b",
                    "cartodb-basemaps-c",
                    "cartodb-basemaps-d"
                ]
            },
            image: "https://terria-catalogs-public.storage.googleapis.com/misc/basemaps/icons/voyager-aus.png",
            id: "some unique id"
        }
    })
], OpenStreetMapCatalogItemTraits);
export default OpenStreetMapCatalogItemTraits;
//# sourceMappingURL=OpenStreetMapCatalogItemTraits.js.map